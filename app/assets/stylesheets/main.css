/**
 * Fylgja (https://fylgja.dev)
 * Licensed under MIT Open Source
 */

*,
::before,
::after {
  box-sizing: border-box;
  border: 0 solid currentcolor;
  background-repeat: no-repeat;
}

:where(:root) {
  --root-bg: hsl(0, 0%, 100%);
  --root-fg: hsl(0, 0%, 8%);
  --family-emoji: "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol",
        "Noto Color Emoji";
  --family-sans: system-ui, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell,
        Helvetica, Arial, "Helvetica Neue", sans-serif, var(--family-emoji);
  --family-mono: ui-monospace, SFMono-Regular, "SF Mono", Menlo, Consolas,
        "Liberation Mono", monospace, var(--family-emoji);
  --chevron-light-scheme: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" stroke="hsl(0 0% 0%)"><path d="m6 9 6 6 6-6"/></svg>');
  --chevron-dark-scheme: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" stroke="hsl(0 0% 100%)"><path d="m6 9 6 6 6-6"/></svg>');
  --outline-transition: outline-offset 150ms cubic-bezier(0.25, 0, 0.4, 1);
  font-family: var(--family-sans);
  -moz-tab-size: 4;
       tab-size: 4;
  -webkit-text-size-adjust: none;
  -moz-text-size-adjust: none;
       text-size-adjust: none;
  scrollbar-gutter: stable;
}

:where(:focus-visible) {
  outline: 2px solid;
  outline-offset: 3px;
}

:where(:active:focus-visible) {
  outline-offset: 0;
  transition: var(--outline-transition);
}

:target {
  scroll-margin-block: var(--anchor-offset, max(2rem, 5svb));
}

@media (prefers-reduced-motion: no-preference) {
  :where(:has(:target)) {
    scroll-behavior: smooth;
  }
}

:where(html) {
  block-size: 100%;
}

:where(body) {
  min-block-size: 100%;
  margin: 0;
  background-color: var(--root-bg);
  color: var(--root-fg);
  font-size: var(--font-size, 1rem);
  line-height: var(--line-height, 1.6);
}

:where(article, section) {
  display: flow-root;
}

:where(
        :-moz-any-link,
        button,
        input,
        label[for],
        select,
        summary,
        textarea,
        [tabindex]:not([tabindex^="-"])
    ) {
  touch-action: manipulation;
}

:where(
        :any-link,
        button,
        input,
        label[for],
        select,
        summary,
        textarea,
        [tabindex]:not([tabindex^="-"])
    ) {
  touch-action: manipulation;
}

:where(summary) {
  display: list-item;
}

:where(summary > *) {
  display: inline;
}

:disabled {
  cursor: not-allowed;
}

:where(h1, h2, h3, h4, h5, h6, p, dl, ul, ol, pre) {
  margin-block: var(--text-my, 1em 1rem);
}

:where(blockquote, hr) {
  margin-block: var(--separator-my, 2.5em);
  margin-inline: 0;
}

:where(h1, h2, h3, h4, h5, h6) {
  font-size: 1.1rem;
  font-weight: 700;
  line-height: 1.1;
  text-wrap: balance;
}

:where(h1) {
  font-size: 3.5rem;
}

:where(h2) {
  font-size: 2.5rem;
}

:where(h3) {
  font-size: 2rem;
}

:where(h4) {
  font-size: 1.5rem;
}

:where(h5) {
  font-size: 1.25rem;
}

:where(p, figcaption, address) {
  max-inline-size: 65ch;
  text-wrap: pretty;
}

:where(address) {
  font-style: normal;
}

:where(:-moz-any-link) {
  color: currentcolor;
  font-weight: 500;
}

:where(:any-link) {
  color: currentcolor;
  font-weight: 500;
}

:where(blockquote) {
  padding-inline-start: 1.5em;
  border-inline-start: 4px solid;
}

:where(input, button, textarea, select),
:where(input[type="file"])::-webkit-file-upload-button {
  font: inherit;
}

:where(ul[role="list"], ol[role="list"], nav ol, nav ul) {
  list-style: none;
  margin-block: 0;
  padding-inline-start: 0;
}

:where(hgroup > :is(h1, h2, h3, h4, h5, h6, p)),
:where(dl, ol, ul) :where(dl, ol, ul) {
  margin-block: 0;
}

:where(dt) {
  font-weight: 500;
}

:where(dd + dt) {
  margin-block-start: 0.5em;
}

:where(dd) {
  margin-inline-start: 0;
}

:where(hr) {
  border-block-end-width: 2px;
  color: inherit;
}

:where(mark) {
  padding-inline: 0.125em;
}

:where(small) {
  font-size: 0.875em;
}

:where(sub, sup) {
  position: relative;
  font-size: 0.75em;
  line-height: 0;
  vertical-align: baseline;
}

:where(sub) {
  bottom: -0.25em;
}

:where(sup) {
  top: -0.5em;
}

:where(table) {
  border-spacing: 0;
  border-color: var(--table-stroke, #777);
}

:where(thead, tbody, tfoot, tr, th, td) {
  border-color: inherit;
}

:where(th, td) {
  padding-block: var(--table-py, 0.875em);
  padding-inline: var(--table-px, 0.625em);
  background: var(--root-bg);
  color: var(--root-fg);
  text-align: start;
}

:where(tr + tr :is(th, td)) {
  border-block-start-width: 1px;
}

:where(thead tr:last-child :is(th, td)) {
  border-block-end-width: 2px;
}

:where(tfoot tr:first-child :is(th, td)) {
  border-block-start-width: 2px;
}

:where(code, kbd, samp, pre) {
  font-family: var(--family-mono);
}

:where(code, pre) {
  background-color: color-mix(in oklab, var(--root-bg) 92%, var(--root-fg));
  writing-mode: lr;
  direction: ltr;
}

:where(:not(pre) > code, kbd) {
  white-space: nowrap;
  padding-inline: 0.25em;
  border-radius: 0.25em;
}

:where(pre) {
  white-space: pre;
  min-inline-size: 0;
  max-inline-size: -moz-max-content;
  max-inline-size: max-content;
  padding-block: 0.875em;
  padding-inline: 1em;
  border-radius: 0.4em;
  overflow: auto;
}

:where(kbd) {
  border-width: 1px;
}

:where(img, svg, video, canvas, audio, iframe, embed, object) {
  display: block;
}

:where(img, svg, video) {
  max-inline-size: 100%;
  block-size: auto;
}

:where(iframe) {
  max-inline-size: 100%;
  block-size: auto;
  aspect-ratio: var(--aspect-ratio, 16/9);
}

:where(figure) {
  display: grid;
  max-width: -moz-fit-content;
  max-width: fit-content;
  gap: 0.5em;
  margin: 0;
}

:where(figcaption, caption) {
  text-align: center;
  font-style: italic;
}

::backdrop {
  background-color: var(--backdrop-color, hsla(0, 0%, 0%, 0.2));
  opacity: 1;
}

@starting-style {
  ::backdrop {
    opacity: 0;
  }
}

@media (prefers-reduced-motion: no-preference) {
  ::backdrop {
    transition: opacity var(--speed) ease-out,
            display var(--speed) ease-out allow-discrete,
            overlay var(--speed) ease-out;
  }
}

:where(dialog, [popover]) {
  --ty: var(--dialog-translate-y, 2rem);
  --tx: var(--dialog-translate-x, 0);
  --speed: var(--dialog-close-speed, 200ms);
  max-block-size: calc(100% - 2em);
  max-inline-size: calc(100% - 2em);
  background-color: var(
        --dialog-bg,
        color-mix(in oklab, var(--root-bg) 90%, white)
    );
  color: var(--dialog-color, var(--root-fg));
  border-radius: 1rem;
  padding: 1.5rem;
  box-shadow: var(--dialog-shadow, 0 3px 5px hsla(0, 0%, 0%, 0.18));
  opacity: 0;
  translate: var(--tx) var(--ty);
}

@media (prefers-reduced-motion: no-preference) {
  :where(dialog, [popover]) {
    transition: translate var(--speed) ease-out,
            opacity var(--speed) ease-out,
            display var(--speed) ease-out allow-discrete,
            overlay var(--speed) ease-out;
  }
}

:where(dialog[open], :popover-open) {
  --speed: var(--dialog-open-speed, 300ms);
  translate: 0 0;
  opacity: 1;
}

@starting-style {
  :where(dialog[open], :popover-open) {
    translate: var(--tx) var(--ty);
    opacity: 0;
  }
}

:where(:root:has(dialog:is([open]:modal, :popover-open))) {
  overflow: hidden;
}

:where(.btn, button, [type="button"], [type="submit"], [type="reset"]),
:where(input[type="file"])::file-selector-button {
  -webkit-appearance: button;
     -moz-appearance: button;
          appearance: button;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  gap: var(--btn-gap, 0.5em);
  padding-block: var(--btn-py, 0.375rem);
  padding-inline: var(--btn-px, 0.8rem);
  border: var(--btn-border-width, 2px) solid var(--btn-stroke, currentcolor);
  border-radius: var(--btn-radius, 0.5rem);
  background: var(--btn-bg, transparent);
  color: var(--btn-color, currentcolor);
  font-weight: var(--btn-font-weight, 500);
  -webkit-text-decoration: none;
  text-decoration: none;
  vertical-align: middle;
  transition: color 0.2s, background-color 0.2s, border-color 0.2s,
        box-shadow 0.2s, var(--outline-transition);
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  cursor: pointer;
}

:where(.btn, button, [type="button"], [type="submit"], [type="reset"]):hover {
  border-color: var(--btn-hover-stroke, var(--btn-stroke, currentcolor));
  background-color: var(
        --btn-hover-bg,
        var(--btn-bg, color-mix(in oklab, currentcolor, transparent 86%))
    );
  color: var(--btn-hover-color, var(--btn-color, currentcolor));
}

:where(.btn, button, [type="button"], [type="submit"], [type="reset"]):is(
        :active,
        [aria-current="page"],
        [aria-checked="true"]
    ) {
  border-color: var(--btn-active-stroke, var(--btn-stroke, currentcolor));
  background-color: var(
        --btn-active-bg,
        var(--btn-bg, color-mix(in oklab, currentcolor, transparent 78%))
    );
  color: var(--btn-active-color, var(--btn-color, currentcolor));
}

:where(
        .btn,
        button,
        [type="button"],
        [type="submit"],
        [type="reset"]
    ):disabled {
  box-shadow: none;
  border-color: var(--btn-disabled-stroke, currentcolor);
  background-color: var(--btn-disabled-bg, hsl(0, 0%, 90%));
  color: var(--btn-disabled-color, hsl(0, 0%, 40%));
  cursor: not-allowed;
}

:where(input[type="file"]):hover::file-selector-button {
  border-color: var(--btn-hover-stroke, var(--btn-stroke, currentcolor));
  background-color: var(
        --btn-hover-bg,
        var(--btn-bg, color-mix(in oklab, currentcolor, transparent 86%))
    );
  color: var(--btn-hover-color, var(--btn-color, currentcolor));
}

:where(input[type="file"]):active::file-selector-button {
  border-color: var(--btn-active-stroke, var(--btn-stroke, currentcolor));
  background-color: var(
        --btn-active-bg,
        var(--btn-bg, color-mix(in oklab, currentcolor, transparent 78%))
    );
  color: var(--btn-active-color, var(--btn-color, currentcolor));
}

:where(input[type="file"]):disabled::file-selector-button {
  box-shadow: none;
  border-color: var(--btn-disabled-stroke, currentcolor);
  background-color: var(--btn-disabled-bg, hsl(0, 0%, 90%));
  color: var(--btn-disabled-color, hsl(0, 0%, 40%));
  cursor: not-allowed;
}

:where(
        input:not([type="checkbox"]):not([type="radio"]):not([type="button"]):not([type="reset"]):not([type="submit"]),
        textarea,
        select
    ) {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  inline-size: 100%;
  margin: 0;
  padding-block: var(--form-py, 0.375rem);
  padding-inline: var(--form-px, 0.8rem);
  border-width: var(--form-border-width, 1px);
  border-color: var(--form-stroke, currentcolor);
  border-radius: var(--form-radius, 0.35rem);
  background: var(--form-bg, var(--root-bg));
  color: var(--form-color, var(--root-fg));
  transition: color 250ms, background-color 250ms, border-color 250ms,
        box-shadow 250ms, var(--outline-transition);
}

:where(
        input:not([type="checkbox"]):not([type="radio"]):not([type="button"]):not([type="reset"]):not([type="submit"]),
        textarea,
        select
    ):is(:disabled, [readonly]) {
  border-style: var(--form-disabled-border-style, dashed);
}

:where(
        input:not([type="checkbox"]):not([type="radio"]):not([type="button"]):not([type="reset"]):not([type="submit"]),
        textarea,
        select
    ):disabled {
  box-shadow: none;
  opacity: var(--form-disabled-opacity, 0.6);
}

:where(
        input:not([type="range"]):not([type="checkbox"]):not([type="radio"]):not([type="button"]):not([type="reset"]):not([type="submit"]),
        textarea,
        select
    ):focus {
  border-color: var(--form-active-color, currentcolor);
  outline: 1px solid var(--form-active-color, currentcolor);
  outline-offset: 0;
}

:where(textarea) {
  field-sizing: content;
}

:where(input[type="color"]) {
  --form-py: 3px;
  --form-px: 3px;
  block-size: var(--block-size, 2.5em);
  inline-size: var(--inline-size, 2.5em);
}

:where(input[type="color"])::-webkit-color-swatch-wrapper {
  padding: 0;
  border-radius: inherit;
}

:where(input[type="color"])::-moz-color-swatch {
  border: 0;
  border-radius: inherit;
}

:where(input[type="color"])::-webkit-color-swatch {
  border: 0;
  border-radius: inherit;
}

:where(input[type="file"]) {
  --form-py: 0;
  --form-px: 0 0.8rem;
  --btn-radius: 0;
  --btn-border-width: var(--form-border-width, 1px);
  overflow: clip;
}

:where(input[type="file"])::file-selector-button {
  margin-block: calc(var(--btn-border-width) / -1);
  margin-inline: calc(var(--btn-border-width) / -1) 1em;
}

:where(input[type="range"]) {
  --track-color: color-mix(in srgb, var(--root-fg) 24%, transparent);
  --fill-color: var(--form-active-color, currentcolor);
  --fill-max: 100;
  --fill: 0;
  --size: var(--thumb-size, 3ex);
  block-size: var(--size);
  padding: 0;
  border: 0;
  background: transparent;
  outline: 0;
  cursor: grab;
}

[dir="rtl"] :where(input[type="range"]) {
  --fill-direction: left;
}

:where(input[type="range"]):focus-visible {
  --outline-width: 2px;
}

:where(input[type="range"]):active {
  cursor: grabbing;
}

:where(input[type="range"])::-webkit-slider-runnable-track {
  --_progression: calc(100% * var(--fill) / var(--fill-max));
  block-size: var(--track-height, 0.85ex);
  border-radius: var(--form-radius, 0.35rem);
  background: var(--track-color)
        linear-gradient(
            to var(--fill-direction, right),
            var(--fill-color) var(--_progression),
            var(--track-color) var(--_progression)
        );
}

:where(input[type="range"])::-moz-range-track {
  --_progression: calc(100% * var(--fill) / var(--fill-max));
  block-size: var(--track-height, 0.85ex);
  border-radius: var(--form-radius, 0.35rem);
  background: var(--track-color)
        linear-gradient(
            to var(--fill-direction, right),
            var(--fill-color) var(--_progression),
            var(--track-color) var(--_progression)
        );
}

:where(input[type="range"])::-webkit-slider-thumb {
  -webkit-appearance: none;
          appearance: none;
  block-size: var(--size);
  inline-size: var(--size);
  box-shadow: var(--thumb-shadow);
  margin-block-start: var(
        --thumb-offset,
        calc(0.5 * (var(--track-height, 0.85ex) - var(--size)))
    );
  border-radius: var(--thumb-radius, 50%);
  border: var(--thumb-border-width, 3px) solid
        var(--thumb-stroke, var(--root-bg));
  background: var(--thumb-bg, var(--fill-color));
  outline: var(--outline-width) solid var(--form-active-color, currentcolor);
}

:where(input[type="range"])::-moz-range-thumb {
  -moz-appearance: none;
       appearance: none;
  block-size: var(--size);
  inline-size: var(--size);
  box-shadow: var(--thumb-shadow);
  margin-block-start: var(
        --thumb-offset,
        calc(0.5 * (var(--track-height, 0.85ex) - var(--size)))
    );
  border-radius: var(--thumb-radius, 50%);
  border: var(--thumb-border-width, 3px) solid
        var(--thumb-stroke, var(--root-bg));
  background: var(--thumb-bg, var(--fill-color));
  outline: var(--outline-width) solid var(--form-active-color, currentcolor);
  box-sizing: border-box;
}

:where(select) {
  word-wrap: normal;
}

:where(select:not([multiple]):not([size]:not([size="1"]))) {
  --icon: var(--select-icon, var(--chevron-light-scheme));
  --icon-size: var(--select-icon-size, 1.25em);
  --icon-offset: var(--select-icon-offset, 0.8rem);
  padding-inline-end: calc(var(--icon-size) + var(--icon-offset));
  background: var(--icon) var(--form-bg, var(--root-bg))
        var(--icon-position, right) var(--icon-offset) center/var(--icon-size)
        no-repeat;
  -webkit-print-color-adjust: exact;
  print-color-adjust: exact;
}

[dir="rtl"] :where(select:not([multiple]):not([size]:not([size="1"]))) {
  --icon-position: left;
}

[list]:not([type*="date"]):not([type="month"]):not([type="week"]):not([type="time"])::-webkit-calendar-picker-indicator,
[list]:not([type*="date"]):not([type="month"]):not([type="week"]):not([type="time"])::-webkit-list-button {
  width: 0;
  height: 0;
  margin: 0;
  padding: 0;
  visibility: hidden;
}

:where(textarea) {
  resize: vertical;
  min-height: calc(
        1lh + var(--form-py, 0.375rem) * 2 + var(--form-border-width, 1px) * 2
    );
}

:where(label:has(input, select, textarea, progress, meter)) {
  display: block;
}

::-moz-placeholder {
  opacity: 1;
  color: color-mix(in srgb, currentcolor 54%, transparent);
}

::placeholder {
  opacity: 1;
  color: color-mix(in srgb, currentcolor 54%, transparent);
}

:where(fieldset) {
  margin: 0;
  padding: 0;
}

:where(legend) {
  padding: 0;
}

::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-datetime-edit,
::-webkit-datetime-edit-fields-wrapper,
::-webkit-datetime-edit-year-field,
::-webkit-datetime-edit-month-field,
::-webkit-datetime-edit-day-field,
::-webkit-datetime-edit-hour-field,
::-webkit-datetime-edit-minute-field,
::-webkit-datetime-edit-second-field,
::-webkit-datetime-edit-millisecond-field,
::-webkit-datetime-edit-meridiem-field {
  display: inline;
  padding-block: 0;
}

::-webkit-date-and-time-value {
  min-height: 1lh;
  text-align: inherit;
}

input:is([type="tel"], [type="url"], [type="email"], [type="number"]) {
  direction: ltr;
}

:where(input[type="checkbox"], input[type="radio"]) {
  --_gap: var(--icon-gap, 2px);
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  block-size: var(--size-y, 1.25em);
  inline-size: var(--size-x, 1.25em);
  border: var(--control-border-width, 2px) solid
        var(--control-stroke, currentcolor);
  background: var(--control-bg, none);
  color: var(--control-color, currentcolor);
  border-radius: var(--control-radius, 0.35rem);
  margin: 0;
  padding: var(--_gap);
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

:where(input[type="checkbox"], input[type="radio"]):not(:disabled) {
  cursor: pointer;
}

:where(input[type="checkbox"], input[type="radio"]):focus-visible {
  outline-color: var(--control-stroke, currentcolor);
}

:where(input[type="checkbox"], input[type="radio"])::after {
  content: "";
  display: block;
  block-size: 100%;
  inline-size: 100%;
  border-radius: inherit;
  background-color: var(--icon-color, currentcolor);
  scale: var(--_show-icon, 0);
  opacity: var(--_show-icon, 0);
  transition: translate 0.15s, scale 0.15s, opacity 0.15s;
  forced-color-adjust: none;
  -webkit-mask: var(--_icon) center/contain no-repeat;
  mask: var(--_icon) center/contain no-repeat;
}

:where(input[type="checkbox"], input[type="radio"]):checked {
  --_show-icon: 1;
  outline-color: var(--control-checked-stroke, var(--root-fg));
  border-color: var(--control-checked-stroke, var(--root-fg));
  background-color: var(--control-checked-bg, var(--root-fg));
  color: var(--control-checked-color, var(--root-bg));
}

:where(input[type="checkbox"], input[type="radio"]):disabled {
  opacity: var(--control-disabled-opacity, 0.6);
}

:where(input[type="radio"]) {
  --_gap: 3px;
  --control-radius: 50%;
}

:where(input[type="checkbox"]:not([role="switch"])) {
  --_gap: 1px;
  --_icon: url("#");
  --checked-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='4'%3E%3Cpath d='M20 6 9 17l-5-5'/%3E %3C/svg%3E");
  --indeterminate-icon: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='4'%3E%3Cpath d='M5 12h14'/%3E%3C/svg%3E");
}

:where(input[type="checkbox"]:not([role="switch"])):indeterminate {
  --_show-icon: 1;
  --_icon: var(--indeterminate-icon);
}

:where(input[type="checkbox"]:not([role="switch"])):checked {
  --_icon: var(--checked-icon);
}

:where(input[type="checkbox"][role="switch"]) {
  --_show-icon: 1;
  --control-radius: 1.25em;
  --size-x: 2em;
}

:where(input[type="checkbox"][role="switch"])::after {
  inline-size: auto;
  aspect-ratio: 1;
}

:where(input[type="checkbox"][role="switch"]):checked {
  --_offset-x: calc(var(--size-x) - var(--size-y, 1.25em));
}

:where(input[type="checkbox"][role="switch"]):checked::after {
  translate: var(--_offset-x) 0%;
}

[dir="rtl"] :where(input[type="checkbox"][role="switch"]):checked::after {
  translate: calc(var(--_offset-x) / -1) 0%;
}

@media print {
  :root {
    --root-bg: white;
    --root-fg: black;
  }

  :is(h1, h2, h3, h4, h5, h6) {
    page-break-after: avoid;
  }

  :is(h2, h3, h4, h5, h6, p) {
    orphans: 3;
    widows: 3;
  }

  :is(tr, img, svg, pre, blockquote) {
    page-break-inside: avoid;
  }

  :is(abbr[title])::after {
    content: " (" attr(title) ")";
  }

  :is(a[href]:not([href^="#"]):not([href^="javascript:"]))::after {
    content: " (" attr(href) ")";
  }

  :is(thead) {
    display: table-header-group;
  }

  :is(input, select, textarea, button, .btn) {
    -webkit-print-color-adjust: exact;
    print-color-adjust: exact;
  }
}

:root {
  --brand: hsl(150 89% 31%);
  --on-brand: hsl(150 100% 100%);
  --root-bg: #f7f8f1;
  --form-active-color: var(--brand);
  --control-checked-stroke: var(--brand);
  --control-checked-bg: var(--brand);
  --control-checked-color: var(--on-brand);
  --btn-radius: 5rem;
  scrollbar-color: var(--scrollthumb-color, var(--brand))
    var(--scrolltrack-color, transparent);
  accent-color: var(--brand);
  caret-color: var(--brand);
}

::marker {
  color: var(--brand);
  font-weight: bolder;
}

::-moz-selection {
  text-shadow: none;
  background: var(--brand);
  color: var(--on-brand);
}

::selection {
  text-shadow: none;
  background: var(--brand);
  color: var(--on-brand);
}

:where(:focus-visible) {
  outline-color: var(--brand);
}

:where(blockquote, hr) {
  border-color: var(--brand);
}

:where(tbody tr:nth-child(even) :is(th, td)) {
  background: color-mix(in oklab, var(--root-bg) 94%, currentcolor);
}

::-webkit-calendar-picker-indicator {
  outline-color: var(--brand);
}

:where(select option:checked) {
  background: var(--brand);
  color: var(--on-brand);
}

:where(.btn.-primary, [type="submit"], form button:not([type])),
:where(input[type="file"])::file-selector-button {
  --btn-stroke: transparent;
  --btn-bg: var(--brand);
  --btn-color: var(--on-brand);
  --btn-hover-bg: color-mix(in oklab, var(--brand) 80%, black);
  --btn-active-bg: color-mix(in oklab, var(--brand) 72%, black);
}

:where(.btn, button, [type="button"], [type="submit"], [type="reset"]):has(
    :where(svg:only-child, img:only-child)
  ) {
  --btn-px: var(--btn-py, 0.375rem);
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

:root{
  --container-size: 1280px;
  --container-padding-y: 0;
  --container-padding-x: 1.25rem
}

.container{
  inline-size:100%;
  max-inline-size:var(--container-size);
  margin-inline-start:auto;
  margin-inline-end:auto;
  padding-block-start:var(--container-padding-y);
  padding-block-end:var(--container-padding-y);
  padding-inline-start:var(--container-padding-x);
  padding-inline-end:var(--container-padding-x)
}

body {
  display: flex;
  flex-direction: column;
}

body > main {
  margin-top: 2rem;
  margin-bottom: 2rem;
  flex-grow: 1;
}

h1 {
  margin-top: 0px;
}

.page-header {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
  padding-top: 1rem;
  padding-bottom: 1rem;
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}

.page-footer {
  --tw-bg-opacity: 1;
  background-color: color-mix(in oklab, var(--brand) calc(100% * var(--tw-bg-opacity)), transparent);
  padding-top: 1rem;
  padding-bottom: 1rem;
  --tw-text-opacity: 1;
  color: color-mix(in oklab, var(--on-brand) calc(100% * var(--tw-text-opacity)), transparent);
}

.my-0 {
  margin-top: 0px;
  margin-bottom: 0px;
}

.mt-4 {
  margin-top: 1rem;
}

.mt-6 {
  margin-top: 1.5rem;
}

.mt-1 {
  margin-top: 0.25rem;
}

.mb-1 {
  margin-bottom: 0.25rem;
}

.flex {
  display: flex;
}

.table {
  display: table;
}

.flex-wrap {
  flex-wrap: wrap;
}

.items-center {
  align-items: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-1 {
  gap: 0.25rem;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-4 {
  gap: 1rem;
}

.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.break-words {
  overflow-wrap: break-word;
}

.border-none {
  border-style: none;
}

.bg-primary {
  --tw-bg-opacity: 1;
  background-color: color-mix(in oklab, var(--brand) calc(100% * var(--tw-bg-opacity)), transparent);
}

.py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.text-center {
  text-align: center;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-on-primary {
  --tw-text-opacity: 1;
  color: color-mix(in oklab, var(--on-brand) calc(100% * var(--tw-text-opacity)), transparent);
}

@media (min-width: 768px) {
  .md\:flex-row {
    flex-direction: row;
  }

  .md\:justify-between {
    justify-content: space-between;
  }

  .md\:py-12 {
    padding-top: 3rem;
    padding-bottom: 3rem;
  }
}
